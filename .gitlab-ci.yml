stages:
  - build
  - deploy

build:
  stage: build
  image: docker:19.03.12
  environment:
    name: $CI_COMMIT_BRANCH
    url: http://kuber.local/$CI_COMMIT_BRANCH
  rules:
    - if: '$BUILD_DISABLED'
      when: never
    - if: '$CI_COMMIT_MESSAGE =~ /nobuild/'
      when: never      
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' 
      when: always

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID"    

# deploy to local k8s
deploy:
  stage: deploy
  image: bitnami/kubectl
  variables:
    K8S_NAMESPACE: default
    K8S_DEPLOYMENT: kzozulya-pow-app-dplmnt
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /nodeploy/'
      when: never      
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: manual
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      when: always      
  
  before_script:
    - env
    - kubectl config set-cluster k8s
    - kubectl config set-credentials ci
    - kubectl config set-context ci --cluster=k8s --namespace $K8S_NAMESPACE
    - kubectl config use-context ci
  script:
    - sed -i -e "s,<IMAGE>,$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID,g" .kube/deployment.yaml
    - kubectl -f .kube/ --validate=false apply
    - kubectl rollout status deployment $K8S_DEPLOYMENT || (kubectl rollout undo deployment $K8S_DEPLOYMENT && exit 1) 
